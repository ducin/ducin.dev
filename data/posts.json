[
  {
    "title": "TypeScript Type Inference Guide",
    "sourceFile": "typescript-type-inference-guide",
    "keywords": [
      "TypeScript",
      "Type Inference",
      "Type Safety",
      "Architecture",
      "Software Design"
    ],
    "description": "Type Inference is the most important feature we should master, as we progress with using TypeScript. It allows us to keep the type safety of our codebase, and declare types less. Less investment cost, same profit.",
    "publishedDate": "2019-01-01",
    "readingTime": "18 min read",
    "coverImage": {
      "URL": "https://unsplash.com/photos/P_qvsF7Yodw",
      "title": "Tokyo Tower Construction Frame",
      "authorURL": "https://unsplash.com/@alain_pham",
      "author": "Alain Pham"
    },
    "coverImageFilename": "cover-metal-construction.jpg"
  },
  {
    "title": "Angular @defer Interactive Examples",
    "sourceFile": "angular-defer-interactive-examples",
    "keywords": ["Angular", "Defer", "Examples", "Lazy Loading", "Bundling"],
    "description": "One of the Angular 17 awesome features shipped is the defer block which allows to lazy load components, directives and pipes, while configuring it on the template level via defer.",
    "publishedDate": "2024-01-04",
    "readingTime": "2 min read",
    "coverImageFilename": "cover-angular-defer.png"
  },
  {
    "title": "Angular Signals are VALUES, not EVENTS",
    "sourceFile": "angular-signals-are-values-not-events",
    "keywords": ["Angular", "Signals", "Architecture", "Software Design"],
    "description": "Recent release of Angular 17.1 (18th January 2024), introduces Signal Inputs. It's a good opportunity to rethink migrating from RxJS to Signals, as more and more APIs are signal-based: the framework (signals, computeds, effects and the rxjs-interop) and ecosystem (NGRX signal store), as well as tons of experiments.",
    "publishedDate": "2024-01-19",
    "readingTime": "8 min read",
    "coverImage": {
      "URL": "https://unsplash.com/photos/low-angle-photography-of-metal-structure-ZiQkhI7417A",
      "title": "Low-angle photography of metal structure",
      "authorURL": "https://unsplash.com/@alinnnaaaa",
      "author": "Alina Grubnyak"
    },
    "coverImageFilename": "cover-low-angle-metal-structure.png"
  },
  {
    "title": "There are no &quot;hot&quot; Observables in RxJS",
    "sourceFile": "there-are-no-hot-observables-in-rxjs",
    "keywords": [
      "Angular",
      "RxJS",
      "Observables",
      "Hot Observables",
      "Subscriptions",
      "Subjects",
      "Multicasting"
    ],
    "description": "The &quot;hot and cold&quot; observables concept is quite useful when we introduce RxJS to a complete beginner. But as soon as they dive into real project usecases, e.g. late subscription of a newly rendered component that subscribes to a (behavior? replay?) subject which had already emitted something - then the &quot;hot and cold&quot; concept is... harmful.",
    "publishedDate": "2024-01-26",
    "readingTime": "8 min read",
    "coverImage": {
      "URL": "https://unsplash.com/photos/red-and-blue-wallpaper-6lQDFGOB1iw",
      "title": "Red and Blue",
      "authorURL": "https://unsplash.com/@pawel_czerwinski",
      "author": "Pawel Czerwinski"
    },
    "coverImageFilename": "cover-red-and-blue.png",
    "workInProgress": true
  }
]
